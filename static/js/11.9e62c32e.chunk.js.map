{"version":3,"sources":["components/List.js","pages/History.js"],"names":["Component","observer","HistoryStore","useStores","RangePicker","DatePicker","Search","Input","useEffect","findAll","reset","data","filteredList","window","columns","title","key","dataIndex","render","item","url","attributes","Img","src","filename","sorter","a","b","href","time","dayjs","format","createdAt","isBefore","sortDirections","onClick","avObject","delete","then","result","error","dateFilter","styled","img","SpinWrapper","div","StyledRow","Row","span","onOK","value","onChange","dateString","isSame","add","isAfter","subtract","setFilter","disabled","isLoading","placeholder","style","width","onSearch","indexOf","spinning","tip","dataSource","History","List"],"mappings":"8mBAQA,IAiKeA,EAjKGC,aAAS,WAAO,IACvBC,EAAgBC,cAAhBD,aACAE,EAAeC,IAAfD,YACAE,EAAUC,IAAVD,OAEPE,qBAAU,WAIN,OAFAN,EAAaO,UAEN,WAEHP,EAAaQ,WAElB,IAEH,IAUMC,EAAOT,EAAaU,aAC1BC,OAAOF,KAAOA,EACd,IAAMG,EAAU,CACZ,CACIC,MAAO,eACPC,IAAK,QACLC,UAAW,aACXC,OAAQ,SAACC,GACL,IAAMC,EAAMD,EAAKC,IAAIC,WAAWD,IAEhC,OAAO,kBAACE,EAAD,CAAKC,IAAKH,MAGzB,CACIL,MAAO,eACPC,IAAK,OACLC,UAAW,aACXC,OAAQ,SAACC,GAEL,OADiBA,EAAKK,UAG1BC,OAAQ,SAACC,EAAGC,GACR,OAAOD,EAAEL,WAAWG,SAAWG,EAAEN,WAAWG,WAGpD,CACIT,MAAO,MACPC,IAAK,MACLC,UAAW,aACXC,OAAQ,SAACC,GACL,IAAMC,EAAMD,EAAKC,IAAIC,WAAWD,IAEhC,OAAO,uBAAGQ,KAAMR,GAAMA,KAG9B,CACIL,MAAO,2BACPC,IAAK,YACLC,UAAW,YACXC,OAAQ,SAACW,GAEL,OAAOC,IAAMD,GAAME,OAAO,wCAE9BN,OAAQ,SAACC,EAAGC,GACR,OAAOG,IAAMJ,EAAEM,WAAWC,SAASN,EAAEK,YAEzCE,eAAgB,CAAC,SAAU,YAE/B,CACInB,MAAO,GACPC,IAAK,SACLE,OAAQ,SAACC,GAEL,OAAO,uBAAGgB,QAAS,kBA/DTC,EA+D4BjB,EA9D9CN,OAAOuB,SAAWA,OAElBlC,EAAamC,OAAOD,GAAUE,MAAK,SAAAC,OAEhC,SAAAC,OALc,IAACJ,IA+DH,mBASfK,EAAa,kBAAM,GAiCvB,IAAMnB,EAAMoB,IAAOC,IAAV,KAOHC,EAAcF,IAAOG,IAAV,KAIXC,EAAYJ,YAAOK,IAAPL,CAAH,KAIf,OACI,oCACI,kBAACI,EAAD,KACI,kBAAC,IAAD,CAAKE,KAAM,GAAX,kCACA,kBAAC,IAAD,KACI,kBAAC5C,EAAD,CAAa6C,KAzDhB,SAACC,KAyD2BC,SAlDzC,SAAkBD,EAAOE,GAIjBX,EADkB,KAAlBW,EAAW,IAA+B,KAAlBA,EAAW,GACtB,kBAAM,GACZA,EAAW,KAAOA,EAAW,GACvB,SAACjC,GAAD,OAAUW,IAAMX,EAAKa,WAAWqB,OAAOD,EAAW,GAAI,QAGtD,SAAAjC,GAAI,OAAIW,IAAMX,EAAKa,WAAWC,SAASH,IAAMsB,EAAW,IAAIE,IAAI,EAAG,SAAWxB,IAAMX,EAAKa,WAAWuB,QAAQzB,IAAMsB,EAAW,IAAII,SAAS,EAAG,SAG9JtD,EAAauD,WAAU,SAAAtC,GACnB,OAAOsB,EAAWtB,KAfH,MAoDsCuC,SAAUxD,EAAayD,cAG5E,kBAACb,EAAD,KACI,kBAAC,IAAD,CAAKE,KAAM,GAAX,sBAGA,kBAAC,IAAD,KACI,kBAAC1C,EAAD,CAAQsD,YAAY,eAAKC,MAAO,CAACC,MAAO,KAAMC,SAxC9D,SAAkBb,GAGVT,EADU,KAAVS,EACa,kBAAM,GAEN,SAAA/B,GAAI,OAAIA,EAAKE,WAAWG,SAASwC,QAAQd,IAAU,GAEpEhD,EAAauD,WAAU,SAAAtC,GACnB,OAAOsB,EAAWtB,KA5BH,UA+Df,kBAACyB,EAAD,KACI,kBAAC,IAAD,CAAMqB,SAAU/D,EAAayD,UAAWO,IAAI,wCAE9ChE,EAAayD,WAAa,kBAAC,IAAD,CAAO7C,QAASA,EAASqD,WAAYxD,QCtJ9DyD,UATf,WACI,OACI,oCACI,wDACA,kBAACC,EAAD","file":"static/js/11.9e62c32e.chunk.js","sourcesContent":["import React, {useEffect} from \"react\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from '../stores/index';\n// import {List,Spin} from \"antd\";\nimport {Input, Table, DatePicker, Spin, Row, Col} from \"antd\";\nimport styled from \"styled-components\";\nimport dayjs from 'dayjs';\n\nconst Component = observer(() => {\n    const {HistoryStore} = useStores();\n    const {RangePicker} = DatePicker;\n    const {Search} = Input;\n\n    useEffect(() => {\n        // console.log('进入组件');\n        HistoryStore.findAll();\n        // HistoryStore.reset()\n        return () => {\n            // console.log('退出组件');\n            HistoryStore.reset();\n        };\n    }, []);\n\n    const handleDelete = (avObject) => {\n        window.avObject = avObject;\n        // console.log('delete-avObject',avObject)\n        HistoryStore.delete(avObject).then(result => {\n            // console.log('删除成功', result);\n        }, error => {\n            // console.log(\"删除失败\", error);\n        });\n    };\n\n    const data = HistoryStore.filteredList;\n    window.data = data;\n    const columns = [\n        {\n            title: '图片',\n            key: 'image',\n            dataIndex: 'attributes',\n            render: (item) => {\n                const url = item.url.attributes.url;\n                // console.log('url',url)\n                return <Img src={url}/>;\n            }\n        },\n        {\n            title: '名字',\n            key: 'name',\n            dataIndex: 'attributes',\n            render: (item) => {\n                const filename = item.filename;\n                return filename;\n            },\n            sorter: (a, b) => {\n                return a.attributes.filename < b.attributes.filename;\n            }\n        },\n        {\n            title: 'Url',\n            key: 'url',\n            dataIndex: 'attributes',\n            render: (item) => {\n                const url = item.url.attributes.url;\n                // console.log('url',url)\n                return <a href={url}>{url}</a>;\n            }\n        },\n        {\n            title: '上传时间',\n            key: 'createdAt',\n            dataIndex: 'createdAt',\n            render: (time) => {\n                // console.log('time',time)\n                return dayjs(time).format('YYYY年MM月DD日 HH:mm:ss');\n            },\n            sorter: (a, b) => {\n                return dayjs(a.createdAt).isBefore(b.createdAt);\n            },\n            sortDirections: ['ascend', 'descend']\n        },\n        {\n            title: '',\n            key: 'delete',\n            render: (item) => {\n                // console.log(item.attributes.url.id)\n                return <a onClick={() => handleDelete(item)}>删除</a>;\n            }\n        }\n    ];\n\n    const onOk = (value) => {\n        // console.log('onOk', value);\n    };\n\n    let dateFilter = () => true;\n    let nameFilter = () => true;\n\n    function onChange(value, dateString) {\n        // console.log('Selected Time: ', value);\n        // console.log('Formatted Selected Time: ', dateString);\n        if (dateString[0] === '' || dateString[1] === '') {\n            dateFilter = () => true;\n        } else if (dateString[0] === dateString[1]) {\n            dateFilter = (item) => dayjs(item.createdAt).isSame(dateString[0], 'day');\n            // return dayjs(item.createdAt).isSame(dateString[0],'day')\n        } else {\n            dateFilter = item => dayjs(item.createdAt).isBefore(dayjs(dateString[1]).add(1, 'day')) && dayjs(item.createdAt).isAfter(dayjs(dateString[0]).subtract(1, 'day'));\n            // return dayjs(item.createdAt).isBefore(dayjs(dateString[1]).add(1, 'day')) && dayjs(item.createdAt).isAfter(dayjs(dateString[0]).subtract(1, 'day'));\n        }\n        HistoryStore.setFilter(item => {\n            return dateFilter(item) && nameFilter(item);\n        });\n    }\n\n\n    function onSearch(value) {\n        // console.log('search', value);\n        if (value === '') {\n            dateFilter = () => true;\n        } else {\n            dateFilter = item => item.attributes.filename.indexOf(value) >= 0;\n        }\n        HistoryStore.setFilter(item => {\n            return dateFilter(item) && nameFilter(item);\n        });\n    };\n\n    const Img = styled.img`\n        height:200px;\n        max-width: 200px;\n        object-fit: contain;\n        margin-right: 30px;\n    `;\n\n    const SpinWrapper = styled.div`\n        margin: 30px 0;\n    `;\n\n    const StyledRow = styled(Row)`\n        margin: 10px 0;\n    `;\n\n    return (\n        <>\n            <StyledRow>\n                <Col span={3}>起始时间：</Col>\n                <Col>\n                    <RangePicker onOK={onOk} onChange={onChange} disabled={HistoryStore.isLoading}/>\n                </Col>\n            </StyledRow>\n            <StyledRow>\n                <Col span={3}>\n                    名字：\n                </Col>\n                <Col>\n                    <Search placeholder='名字' style={{width: 200}} onSearch={onSearch}/>\n                </Col>\n            </StyledRow>\n            <SpinWrapper>\n                <Spin spinning={HistoryStore.isLoading} tip='正在加载中...'></Spin>\n            </SpinWrapper>\n            {!HistoryStore.isLoading && <Table columns={columns} dataSource={data}/>}\n        </>\n\n    );\n\n});\n\nexport default Component;\n\n/*\nreturn (\n    <>\n        <InfiniteScroll\n            initialLoad={true}\n            pageStart={0}\n            loadMore={handleInfiniteOnLoad}\n            hasMore={!HistoryStore.isLoading && HistoryStore.hasMore}\n            useWindow={false}\n        >\n            <List\n                dataSource={HistoryStore.list}\n                renderItem={item => (\n                    <List.Item key={item.id}>\n                        <div>\n                            <Img src={item.attributes.url.attributes.url} alt=\"\"/>\n                        </div>\n                        <div>{item.attributes.filename}</div>\n                        <div>\n                            <a href={item.attributes.url.attributes.url}>{item.attributes.url.attributes.url}</a>\n                        </div>\n                        <div>\n                            {dayjs(item.createdAt).format('YYYY年MM月DD日 HH:mm:ss')}\n                        </div>\n                        {/!*<button onClick={()=>{console.log('item',item);window.item=item}}>log item</button>*!/}\n                    </List.Item>)}>\n                {HistoryStore.isLoading && HistoryStore.hasMore && (\n                    <div>\n                        <Spin/>\n                    </div>\n                )}\n            </List>\n\n        </InfiniteScroll>\n    </>\n);*/\n","import React from 'react'\nimport List from '../components/List'\n\nfunction History(){\n    return (\n        <>\n            <h1>上传历史</h1>\n            <List/>\n        </>\n    )\n}\n\nexport default History;\n"],"sourceRoot":""}