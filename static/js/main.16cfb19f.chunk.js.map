{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js","logo.svg"],"names":["Header","styled","header","Logo","img","StyledNav","nav","StyledLink","NavLink","StyledButton","Button","Login","div","Component","observer","props","useStores","AuthStore","UserStore","history","useHistory","src","LogoUrl","to","exact","activeClassName","currentUser","attributes","username","type","onClick","logout","push","Footer","footer","Home","lazy","History","About","Register","App","fallback","Loading","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","log","AV","init","appId","appKey","serverURL","Auth","register","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","login","logIn","logOut","getCurrentUser","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serverFile","delete","avObject","createWithoutData","id","destroy","result","find","page","limit","query","Query","equalTo","skip","descending","include","results","findAll","this","observable","action","newList","list","concat","isLoading","append","length","hasMore","finally","filter","computed","newFilename","newFile","isUploading","values","pullUser","resetUser","HistoryStore","reset","ImageStore","context","createContext","stores","useContext","module","exports"],"mappings":"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","file":"static/js/main.16cfb19f.chunk.js","sourcesContent":["import React from 'react';\nimport LogoUrl from '../logo.svg';\nimport {NavLink,useHistory} from 'react-router-dom';\nimport styled from 'styled-components';\nimport {Button} from 'antd';\nimport {useStores} from \"../stores\";\nimport {observer} from \"mobx-react\";\n\nconst Header = styled.header`\n    background-color:#001529;\n    color:white;\n    padding:10px;\n    display:flex;\n    align-items: center;\n`;\n\nconst Logo = styled.img`\n    height:30px;\n`;\n\nconst StyledNav = styled.nav`\n    flex:1;\n`;\n\nconst StyledLink = styled(NavLink)`\n    color:#fff;\n    margin-left:10px;\n    &.active {\n        border-bottom: 1px solid #fff;\n    }\n`;\n\nconst StyledButton = styled(Button)`\n    color:white;\n    margin-left:10px;\n`;\n\nconst Login = styled.div`\n    \n`;\n\nconst Component = observer((props) => {\n    const {AuthStore, UserStore} = useStores();\n    const history = useHistory();\n    const handleLogin = () => {\n        history.push('/login')\n    };\n\n    const handleLogout = () => {\n        AuthStore.logout();\n        history.push('/')\n    };\n\n    const handleRegister = () => {\n        history.push('/register')\n    };\n\n    return (\n        <Header>\n            <Logo src={LogoUrl}/>\n            <StyledNav>\n                <StyledLink to='/' exact activeClassName=\"active\">首页</StyledLink>\n                <StyledLink to='/history' exact activeClassName=\"active\">上传历史</StyledLink>\n                <StyledLink to='/about' exact activeClassName=\"active\">关于我</StyledLink>\n            </StyledNav>\n            <Login>\n                {\n                    UserStore.currentUser ?\n                        <>\n                            {UserStore.currentUser.attributes.username}\n                            <StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\n                        </> :\n                        <>\n                            <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\n                            <StyledButton type=\"primary\" onClick={handleRegister}> 注册 </StyledButton>\n                        </>\n                }\n            </Login>\n        </Header>\n    );\n});\n\nexport default Component;\n\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst Footer = styled.footer`\n    padding:10px;\n    text-align:center;\n    font-size:12px;\n`\n\nexport default function(){\n    return (\n        <Footer>\n            <div>Footer</div>\n        </Footer>\n    )\n}\n\n","import React from \"react\";\nexport default function(){\n    return (\n        <div>Loading....</div>\n    )\n}\n","import React,{Suspense,lazy} from 'react';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport {Switch, Route} from 'react-router-dom';\nimport Loading from \"./components/Loading\";\n\nconst Home = lazy(()=>import('./pages/Home'))\nconst History = lazy(()=>import('./pages/History'))\nconst About = lazy(()=>import('./pages/About'))\nconst Login = lazy(()=>import('./pages/Login'))\nconst Register = lazy(()=>import('./pages/Register'))\n\nfunction App() {\n    return (\n        <>\n            <Header/>\n            <main>\n                <Suspense fallback={<Loading/>}>\n                    <Switch>\n                        <Route path=\"/\" exact><Home/></Route>\n                        <Route path=\"/history\" exact><History/></Route>\n                        <Route path=\"/about\" exact><About/></Route>\n                        <Route path=\"/login\" exact><Login/></Route>\n                        <Route path=\"/register\" exact><Register/></Route>\n                    </Switch>\n                </Suspense>\n            </main>\n            <Footer/>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter as Router} from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n    <Router>\n        <App/>\n    </Router>\n    ,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import AV, {Query, User} from 'leancloud-storage';\n\nconsole.log('AV: ', AV);\n\nAV.init({\n    appId: \"5rNBCHoC93QGdT46Wto1Ouqk-gzGzoHsz\",\n    appKey: \"6ToblRTyjDWoIOvJLEREfjLM\",\n    serverURL: \"https://5rnbchoc.lc-cn-n1-shared.com\"\n});\n\nconst Auth = {\n    register(username, password) {\n        const user = new User();\n        user.setUsername(username);\n        user.setPassword(password);\n        return new Promise((resolve, reject) => {\n            user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error));\n        });\n    },\n    login(username, password) {\n        return new Promise((resolve, reject) => {\n            User.logIn(username, password).then(function (loginedUser) {\n                // 登录成功，跳转到商品 list 页面\n                resolve(loginedUser);\n            }, function (error) {\n                reject(error);\n                // alert(JSON.stringify(error));\n            });\n        });\n    },\n    logout() {\n        User.logOut();\n    },\n    getCurrentUser() {\n        return User.current();\n    }\n\n};\n\nconst Uploader = {\n    add(file, filename) {\n        const item = new AV.Object('Image');\n        const avFile = new AV.File(filename, file);//有问题\n        item.set('filename', filename);\n        item.set('owner', AV.User.current());\n        item.set('url', avFile);\n        return new Promise((resolve, reject) => {\n            item.save().then(serverFile => {\n                    // console.log('保存成功');\n                    resolve(serverFile);\n                },\n                error => {\n                    // console.log('保存失败');\n                    reject(error);\n                });\n        });\n    },\n\n    delete(avObject){\n        const item = AV.Object.createWithoutData('Image', avObject.id);\n        return new Promise((resolve,reject)=>{\n            item.destroy().then((result)=>resolve(result),(error)=>reject(error));\n        })\n\n    },\n\n    find({page = 0, limit = 10}) {\n        const query = new AV.Query('Image');\n        query.equalTo('owner', AV.User.current());\n        query.limit(limit);\n        query.skip(page * limit);\n        query.descending('createdAt');\n        query.include('owner');\n        return new Promise((resolve, reject) => {\n            query.find().then(results => resolve(results))\n                .catch(error => reject(error));\n        });\n    },\n\n    findAll(){\n        const query = new AV.Query('Image');\n        query.equalTo('owner', AV.User.current());\n        query.descending('createdAt');\n        query.include('owner');\n        return new Promise((resolve, reject) => {\n            query.find().then(results => resolve(results))\n                .catch(error => reject(error));\n        });\n    }\n};\n\nwindow.AV = AV\nwindow.Uploader = Uploader;\nwindow.Auth = Auth;\nexport {Auth, Uploader};\n","//当前用户信息\nimport {observable,action} from \"mobx\";\nimport {Auth} from '../models'\nclass UserStore{\n    @observable currentUser = Auth.getCurrentUser();\n    @action pullUser(){\n        this.currentUser = Auth.getCurrentUser()\n    }\n    @action resetUser(){\n        this.currentUser = null;\n    }\n}\nexport default new UserStore();\n","import {observable,computed, action} from \"mobx\";\nimport {Uploader} from \"../models\";\n\nclass HistoryStore {\n    @observable list = [];\n    @observable isLoading = false;\n    @observable hasMore = true;\n    @observable page = 0;\n    @observable filter = ()=>true;\n    limit = 10;\n\n    @computed get filteredList(){\n        return this.list.filter(item=>this.filter(item))\n    }\n\n    @action append(newList) {\n        console.log('append-list', this.list);\n        console.log('append-newList', newList);\n        this.list = this.list.concat(newList);\n    }\n\n    @action find() {\n        this.isLoading = true;\n        return new Promise((resolve, reject) => {\n            Uploader.find({page: this.page, limit: this.limit})\n                .then(newList => {\n                    this.append(newList);\n                    this.page++;\n                    if (newList.length < this.limit) {\n                        this.hasMore = false;\n                        console.log('last page!');\n                    }\n                    resolve(newList);\n                    console.log('find!');\n                }).catch(error => {\n                reject(error);\n                console.log('error!');\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        });\n    }\n\n    @action findAll() {\n        this.list = [];\n        this.isLoading = true;\n        return new Promise((resolve, reject) => {\n            Uploader.findAll()\n                .then(list => {\n                    this.list = list;\n                    this.page++;\n                    resolve(list);\n                    console.log('find all!');\n                }).catch(error => {\n                reject(error);\n                console.log('error!');\n            }).finally(() => {\n                this.isLoading = false;\n            });\n        });\n    }\n\n    @action reset() {\n        this.list = [];\n        this.isLoading = false;\n        this.hasMore = true;\n        this.page = 0;\n    }\n\n    @action delete(avObject) {\n        return new Promise((resolve, reject) => {\n            Uploader.delete(avObject).then(result => {\n                this.list = this.list.filter(item=>{return !(item===avObject)})\n                resolve(result);\n            }, error => reject(error));\n        });\n\n    }\n\n    @action setFilter(filter){\n        this.filter = filter\n    }\n\n}\n\nexport default new HistoryStore();\n","import {observable, action} from \"mobx\";\nimport {Auth} from '../models';\nimport {Uploader} from \"../models\";\n\nclass ImageStore {\n    @observable filename = \"\";\n    @observable file = null;\n    @observable isUploading = false;\n    @observable serverFile = null;\n\n\n    @action setFilename(newFilename) {\n        this.filename = newFilename;\n    }\n\n    @action setFile(newFile) {\n        this.file = newFile;\n    }\n\n    @action upload() {\n        this.isUploading = true;\n        this.serverFile = null;\n        return new Promise((resolve, reject) => {\n            Uploader.add(this.file, this.filename).then(serverFile => {\n                this.serverFile = serverFile;\n                resolve(serverFile);\n            }, error => {\n                console.error(error);\n                reject(error);\n            }).finally(() => {\n                this.isUploading = false;\n            });\n        });\n\n    }\n\n    @action reset() {\n        // this.filename = \"\";\n        // this.file = null;\n        this.isUploading = false;\n        this.serverFile = null;\n    }\n}\n\nexport default new ImageStore();\n","import {observable, action} from \"mobx\";\nimport {Auth} from \"../models\";\nimport UserStore from \"./user\";\nimport HistoryStore from './history'\nimport ImageStore from './image'\n\n//登录，注册信息\nclass AuthStore {\n    @observable values = {\n        username: 'user A',\n        password: ''\n    };\n\n    @action setUsername(username) {\n        this.values.username = username;\n    }\n\n    @action setPassword(password) {\n        this.values.password = password;\n    }\n\n    @action login() {\n        return new Promise((resolve, reject) => {\n            Auth.login(this.values.username, this.values.password).then(user => {\n                // window.alert(\"登录成功!\" + this.values.username);\n                UserStore.pullUser();\n                resolve(user);\n            }).catch(error => {\n                // window.alert(\"登录失败!\" + error);\n                reject(error);\n            });\n        });\n\n    }\n\n    @action register() {\n        return new Promise((resolve, reject) => {\n            Auth.register(this.values.username, this.values.password).then(user => {\n                // window.alert(\"注册成功!\" + this.values.username);\n                UserStore.pullUser();\n                resolve(user);\n            }).catch(error => {\n                // window.alert(\"注册失败!\" + error);\n                UserStore.resetUser();\n                reject(error);\n            });\n        });\n    }\n\n    @action logout() {\n        Auth.logout();\n        UserStore.resetUser()\n        HistoryStore.reset()\n        ImageStore.reset()\n        // window.alert(\"已注销！\");\n    }\n}\n\nexport default new AuthStore();\n","import AuthStore from \"./auth\";\nimport UserStore from './user';\nimport ImageStore from './image';\nimport HistoryStore from './history'\nimport {createContext, useContext} from \"react\";\n\nconst context = createContext({\n    AuthStore, UserStore, ImageStore,HistoryStore\n});\n\nwindow.stores = {AuthStore, UserStore,ImageStore,HistoryStore};\n\nexport const useStores = () => useContext(context);\n","module.exports = __webpack_public_path__ + \"static/media/logo.d91959ba.svg\";"],"sourceRoot":""}