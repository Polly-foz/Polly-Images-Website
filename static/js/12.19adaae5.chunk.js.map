{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Dragger","Upload","Result","styled","div","H1","h1","Image","img","Component","observer","useStores","ImageStore","UserStore","refWidth","useRef","refHeight","store","useLocalStore","width","setWidth","height","setHeight","serverFile","attributes","url","widthStr","heightStr","props","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","test","size","error","upload","then","console","log","success","catch","showUploadList","spinning","isUploading","tip","className","InboxOutlined","href","filename","src","alt","placeholder","ref","onChange","current","value","fullStr","target","Tips","children","Home","Uploader"],"mappings":"ujBAOOA,EAAWC,IAAXD,QAEDE,EAASC,IAAOC,IAAV,KAKNC,EAAKF,IAAOG,GAAV,KAIFC,EAAQJ,IAAOK,IAAV,KA+GIC,EA1GGC,aAAS,WAAO,IAAD,EACGC,cAAzBC,EADsB,EACtBA,WAAYC,EADU,EACVA,UACbC,EAAWC,mBACXC,EAAYD,mBACZE,EAAQC,aAAc,iBAAO,CAC/BC,MAAO,KACPC,SAF+B,SAEtBD,GACLF,EAAME,MAAQA,GAElB,eACI,OAAOF,EAAME,MAAN,aAAoBF,EAAME,OAAU,IAE/CE,OAAQ,KACRC,UAT+B,SASrBD,GACNJ,EAAMI,OAASA,GAEnB,gBACI,OAAOJ,EAAMI,OAAN,aAAqBJ,EAAMI,QAAW,IAEjD,cACI,OAAOT,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IACnD,gBAAkBR,EAAMS,SAAWT,EAAMU,eAI/CC,EAAQ,CACVC,aAAc,SAAAC,GAGV,OAFAlB,EAAWmB,QAAQD,GACnBlB,EAAWoB,YAAYF,EAAKG,MACE,OAA1BpB,EAAUqB,aACVC,IAAQC,QAAQ,+CACT,GAEP,kDAAkDC,KAAKP,EAAKG,MAI7DH,EAAKQ,KAAO,SACXH,IAAQI,MAAM,uDACP,IAEX3B,EAAW4B,SAASC,MAAK,SAAAlB,GACrBmB,QAAQC,IAAI,4BACZD,QAAQC,IAAIpB,GACZY,IAAQS,QAAQ,qCACjBC,OAAM,SAAAN,GACLG,QAAQC,IAAI,4BACZR,IAAQI,MAAM,sCAGX,IAhBHJ,IAAQI,MAAM,oFACP,IAiBfO,gBAAgB,GAUpB,OACI,kBAAC5C,EAAD,KACI,kBAAC,IAAD,CAAM6C,SAAUnC,EAAWoC,YAAaC,IAAI,sBACxC,kBAACjD,EAAY4B,EACT,uBAAGsB,UAAU,wBACT,kBAACC,EAAA,EAAD,OAEJ,uBAAGD,UAAU,mBAAb,0DACA,uBAAGA,UAAU,mBAAb,kFACsC,6BADtC,wDAQPtC,EAAWW,WAAa,6BACrB,kBAAClB,EAAD,iCACA,4BACI,wDACA,4BACI,uBAAG+C,KAAMxC,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,KACpDb,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,MAGzD,kDACA,4BAAKb,EAAWyC,UAChB,wDACA,4BACI,kBAAC9C,EAAD,CAAO+C,IAAK1C,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAK8B,IAAI,MAEzE,wDACA,4BACI,2BAAOC,YAAY,2BAAOC,IAAK3C,EAAU4C,SAxCrC,WACpBzC,EAAMG,SAASN,EAAS6C,QAAQC,UAwChB,2BAAOJ,YAAY,2BAAOC,IAAKzC,EAAW0C,SAtCrC,WACrBzC,EAAMK,UAAUN,EAAU2C,QAAQC,WAuCtB,4BAAI,uBAAGR,KAAMnC,EAAM4C,QAASC,OAAO,UAAU7C,EAAM4C,YAElD,S,qLCxHrB,IAAME,EAAO5D,IAAOC,IAAV,KAYKK,EAJG,SAAC,GAAc,IAAbuD,EAAY,EAAZA,SAChB,OAAQ,kBAACD,EAAD,KAAOC,ICPbC,EAAOvD,aAAS,WAClB,IAAMG,EAAYF,cAAYE,UAC9B,OACI,oCACKA,EAAUqB,YACP,KACA,kBAAC,EAAD,yDAEJ,kBAACgC,EAAD,UAKGD","file":"static/js/12.19adaae5.chunk.js","sourcesContent":["import React, {useRef} from 'react';\nimport {useStores} from '../stores/index';\nimport {observer, useLocalStore} from \"mobx-react\";\nimport {Upload, message, Spin} from 'antd';\nimport {InboxOutlined} from '@ant-design/icons';\nimport styled from \"styled-components\";\n\nconst {Dragger} = Upload;\n\nconst Result = styled.div`\n    margin-top:30px;\n    padding: 20px;\n    border: 1px dashed #ccc;\n`;\nconst H1 = styled.h1`\n    margin: 20px 0;\n    text-align: center;\n`;\nconst Image = styled.img`\n    max-width: 400px;\n`;\n\n\nconst Component = observer(() => {\n    const {ImageStore, UserStore} = useStores();\n    const refWidth = useRef();\n    const refHeight = useRef();\n    const store = useLocalStore(() => ({\n        width: null,\n        setWidth(width) {\n            store.width = width;\n        },\n        get widthStr() {\n            return store.width ? `/w/${store.width}` : '';\n        },\n        height: null,\n        setHeight(height) {\n            store.height = height;\n        },\n        get heightStr() {\n            return store.height ? `/h/${store.height}` : '';\n        },\n        get fullStr() {\n            return ImageStore.serverFile.attributes.url.attributes.url +\n                '?imageView2/0' + store.widthStr + store.heightStr;\n        }\n    }));\n\n    const props = {\n        beforeUpload: file => {\n            ImageStore.setFile(file);\n            ImageStore.setFilename(file.name);\n            if (UserStore.currentUser === null) {\n                message.warning('请先登录再上传');\n                return false;\n            }\n            if(!/(\\.svg$)|(\\.png$)|(\\.jpg$)|(\\.jpeg$)|(\\.gif$)/ig.test(file.name)){\n                message.error('只能上传.svg/.png/.jpg/.jpeg/.gif格式的图片')\n                return false\n            }\n            if(file.size > 1024*1024){\n                message.error('图片尺寸不能超过1M')\n                return false\n            }\n            ImageStore.upload().then(serverFile => {\n                console.log(\"上传成功\");\n                console.log(serverFile);\n                message.success('上传成功！')\n            }).catch(error => {\n                console.log(\"上传失败\");\n                message.error('上传失败！')\n            });\n            // console.log(file)\n            return false;\n        },\n        showUploadList: false\n    };\n\n    const bindWidthChange = () => {\n        store.setWidth(refWidth.current.value);\n    };\n    const bindHeightChange = () => {\n        store.setHeight(refHeight.current.value);\n    };\n\n    return (\n        <Result>\n            <Spin spinning={ImageStore.isUploading} tip='上传中'>\n                <Dragger {...props}>\n                    <p className=\"ant-upload-drag-icon\">\n                        <InboxOutlined/>\n                    </p>\n                    <p className=\"ant-upload-text\">点击或拖拽上传图片</p>\n                    <p className=\"ant-upload-hint\">\n                        只能上传.svg/.png/.jpg/.jpeg/.gif格式的图片<br/>\n                        图片尺寸不能超过1M\n                    </p>\n                </Dragger>\n            </Spin>\n\n\n            {ImageStore.serverFile ? <div>\n                <H1>上传结果</H1>\n                <dl>\n                    <dt>线上地址</dt>\n                    <dd>\n                        <a href={ImageStore.serverFile.attributes.url.attributes.url}>\n                            {ImageStore.serverFile.attributes.url.attributes.url}\n                        </a>\n                    </dd>\n                    <dt>文件名</dt>\n                    <dd>{ImageStore.filename}</dd>\n                    <dt>图片预览</dt>\n                    <dd>\n                        <Image src={ImageStore.serverFile.attributes.url.attributes.url} alt=\"\"/>\n                    </dd>\n                    <dt>更多尺寸</dt>\n                    <dd>\n                        <input placeholder='最大宽度' ref={refWidth} onChange={bindWidthChange}/>\n                        <input placeholder='最大高度' ref={refHeight} onChange={bindHeightChange}/>\n                    </dd>\n                    <dd><a href={store.fullStr} target='_blank'>{store.fullStr}</a></dd>\n                </dl>\n            </div> : null}\n\n        </Result>\n    );\n});\n\nexport default Component;\n","import React from 'react'\nimport styled from \"styled-components\";\n\nconst Tips = styled.div`\n    background: orange;\n    padding: 10px;\n    border-radius: 4px;\n    color: white;\n    margin: 30px 0;\n`\n\nconst Component = ({children})=>{\n    return (<Tips>{children}</Tips>)\n}\n\nexport default Component\n","import React from 'react';\nimport {useStores} from '../stores/index';\nimport {observer} from \"mobx-react\";\nimport Uploader from \"../components/Uploader\"\nimport Tips from \"../components/Tips\"\nconst Home = observer(() => {\n    const UserStore = useStores().UserStore;\n    return (\n        <>\n            {UserStore.currentUser ?\n                null:\n                <Tips>请先登录再上传！</Tips>\n            }\n            <Uploader/>\n        </>\n    );\n});\n\nexport default Home;\n"],"sourceRoot":""}